TITLE:: Alga
summary:: live-coding dialect focused on the interpolation between sonic nodes
categories:: Alga>Classes
related:: Classes/AlgaNode, Classes/AlgaSynthDef, Classes/AlgaServerOptions

DESCRIPTION::
emphasis::Alga:: is a new live coding language whose focus is not on pattern manipulation, but on describing connections. By linking link::Classes/AlgaNode::s together, it is possible to create a fluid, complex network of sonic interactions. What makes emphasis::Alga:: different from other environments is its interpolation capabilities. In fact, the nature of the connections between  link::Classes/AlgaNode::s arises from continuous processes of interpolation between the current states of the system and future ones, over specified windows of time.

CLASSMETHODS::

METHOD:: boot
Boot emphasis::Alga:: on a specified link::Classes/Server::.
ARGUMENT:: onBoot
Execute a link::Classes/Function:: on boot.
ARGUMENT:: server
The link::Classes/Server:: to boot emphasis::Alga:: on.
ARGUMENT:: algaServerOptions
An instance of link::Classes/AlgaServerOptions:: to boot the server with. If not specified, a default one will be created.
ARGUMENT:: clock
The emphasis::Clock:: for the internal link::Classes/AlgaScheduler::. If not specified, a default link::Classes/TempoClock:: will be created.

EXAMPLES::
code::
(
Alga.boot({
	AlgaSynthDef(\mySineOsc, {
		SinOsc.ar(\freq.ar(440)).dup
	}).add;
});
)

a = AlgaNode(\mySineOsc, connectionTime:2).play;

a <<.freq 220;

b = AlgaNode({ Pulse.ar(LFNoise1.kr(1).range(1, 100)) });

a.from(b, \freq, scale: [100, 1000], time:5);

c = AlgaNode(\mySineOsc, [\freq, 2]);

a.mixFrom(c, \freq, scale: [-100, 100]);

c.clear(3);

b.clear(5);

a.clear(3);
::

s.plotTree