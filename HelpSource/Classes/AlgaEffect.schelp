TITLE:: AlgaEffect
summary:: An AlgaNode that gets processed in the effects' ParGroup
categories:: Alga
related:: Classes/Alga, Classes/AlgaNode, Classes/AlgaPattern, Classes/AlgaModulator

DESCRIPTION::
An link::Classes/AlgaEffect:: has the same exact purpose as an link::Classes/AlgaNode::, with the difference of it being processed in a link::Classes/ParGroup:: that follows the one used for link::Classes/AlgaNode::s and link::Classes/AlgaPattern::s.

When using the emphasis::supernova:: server, link::Classes/Alga:: attempts to parallelize as much processing as possible: when link::Classes/AlgaNode::s are connected together, they will be processed on the same emphasis::supernova:: thread. However, there are cases where one might actually only want to define an effect to send multiple link::Classes/AlgaNode::s to. This is the purpose of this class.

note::
When using the default emphasis::scsynth:: server, this class will behave exactly as an link::Classes/AlgaNode::.
::

INSTANCEMETHODS::
private:: createAllGroups
private:: isAlgaEffect
private:: isAlgaNode_AlgaBlock

EXAMPLES::
code::
(
Alga.boot({
	//50 saws with random frequency
	AlgaSynthDef(\expensiveSaws, {
		Mix(Saw.ar(Array.rand(50, 100, 1000))) * 0.03
	}).add;

	s.sync;

	//Declare a reverb to use as effect
	a = AlgaEffect({ FreeVerb.ar(\in.ar, 1, 1) }).play(chans: 2);

	//Define 25 nodes to operate in parallel, but connect them all to the AlgaEffect
	25.do({
		b = AlgaNode(\expensiveSaws);
		a <<+ b;
	});

	//Print out cpu usage
	fork {
		loop {
			s.avgCPU.postln;
			1.wait;
		}
	}
},

//Compare the CPU usage of these two cases by commenting / uncommenting
//the algaServerOptions to use: supernova or scsynth

//supernova
algaServerOptions: AlgaServerOptions(supernova: true, latency: 0.5)

//scsynth
//algaServerOptions: AlgaServerOptions(latency: 0.5)
)
)
::