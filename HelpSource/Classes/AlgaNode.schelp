TITLE:: AlgaNode
summary:: Alga module representing an instance of a sonic process
categories:: Alga
related:: Classes/Alga, Classes/AlgaSynthDef

DESCRIPTION::
An link::Classes/AlgaNode:: is the fundamental element of link::Classes/Alga::. Conceptually, it is very similar to an individual in a modular synthesizer, which, however, can be dynamically created and replaced on the fly. link::Classes/AlgaNode::s can be patched together by addressing specific output to input (and vice-versa) connections.

There are 3 important features that make link::Classes/AlgaNode::s different from other forms of patching already present in emphasis::SuperCollider::.

NUMBEREDLIST::
## Connecting link::Classes/AlgaNode::s together will trigger a process of interpolation between the current state of the receiver and the future one where the new connection will take place. This feature applies to any operation: from creation, to connection and replacement of nodes.

## Whenever a new connection is made, link::Classes/Alga:: takes care of running any necessary conversions of rate and number of channels: link::Classes/Alga:: takes a emphasis::patch anything into anything:: approach.

## link::Classes/AlgaNode::s do not only specify connections via their parameters, as it is usual in emphasis::SuperCollider::, but also by emphasis::output names::. In fact, thanks to the link::Classes/AlgaSynthDef:: class it is possible to define specific emphasis::symbol to channel(s):: combinations to address a specific output - or outputs - of a node. An link::Classes/AlgaNode::, then, is not only described by its emphasis::inputs::, but, like in modular synthesizers, also by its emphasis::outputs::.
::

By going through the examples, hopefully all these notions will be clearer.

CLASSMETHODS::

METHOD:: new
Create a new link::Classes/AlgaNode::.
ARGUMENT:: obj
Mandatory argument. It accepts either a emphasis::UGen function:: or a symbol to lookup a defined link::Classes/AlgaSynthDef::
ARGUMENT:: args
Define default arguments for the parameters of the function or link::Classes/AlgaSynthDef::. Note that these will be applied in regards to emphasis::connectionTime::.
ARGUMENT:: connectionTime
Specify the interpolation time it takes whenever making a new connection to any parameter of this link::Classes/AlgaNode::.
ARGUMENT:: playTime
Specify the fading in / fading out time that it takes for this link::Classes/AlgaNode:: to play through speakers. These values are applied when calling the emphasis::play:: or emphasis::stop:: functions.
ARGUMENT:: outsMapping
It works just like link::Classes/AlgaSynthDef::'s emphasis::outsMapping:: argument, but for the case of using an emphasis::UGen function:: as the emphasis::obj:: argument. Specify new mappings by an array that maps symbols to specific output channels.
ARGUMENT:: server
Specify a link::Classes/Server:: to instantiated the link::Classes/AlgaNode:: on. This link::Classes/Server:: must have had link::Classes/Alga:: booted on it. It defaults to code::Server.default::.
ARGUMENT:: sched
Just like any other link::Classes/AlgaNode:: method, the current function can be scheduled at specific times in the future, according to the clock that the link::Classes/Alga:: instance booted on the server is using.

INSTANCEMETHODS::

METHOD:: play
a

METHOD:: stop
a

METHOD:: clear
a

METHOD:: connectionTime
a

METHOD:: ct
a

method:: paramConnectionTime
a

method:: pct
a

METHOD:: playTime
a

METHOD:: pt
a

METHOD:: replace
Replace the current content of the link::Classes/AlgaNode::. This method also takes care of restoring all running connections, applying the correct connection times and rate / channels conversions.
ARGUMENT:: obj
Mandatory argument. It accepts either a emphasis::UGen function:: or a symbol to lookup a defined link::Classes/AlgaSynthDef::
ARGUMENT:: args
Define default arguments for the parameters of the function or link::Classes/AlgaSynthDef::. Note that these will be applied in regards to emphasis::connectionTime::.
ARGUMENT:: time
Define a temporary connection time that the method takes to complete, applying the necessary interpolations.
ARGUMENT:: sched
Just like any other link::Classes/AlgaNode:: method, the current function can be scheduled at specific times in the future, according to the clock that the link::Classes/Alga:: instance booted on the server is using.
ARGUMENT:: outsMapping
It works just like link::Classes/AlgaSynthDef::'s emphasis::outsMapping:: argument, but for the case of using an emphasis::UGen function:: as the emphasis::obj:: argument. Specify new mappings by an array that maps symbols to specific output channels.
ARGUMENT:: keepOutsMappingIn
Specify whether the current emphasis::output channels mapping:: of the link::Classes/AlgaNode::s connected to the inputs of this one should be maintained.
ARGUMENT:: keepOutsMappingOut
Specify whether the current emphasis::output channels mapping:: of the link::Classes/AlgaNode::s connected to the outputs of this one should be maintained.
ARGUMENT:: keepScalesIn
Specify whether the emphasis::scales:: of all the link::Classes/AlgaNode::s connected to the inputs of this one should be maintained.
ARGUMENT:: keepScalesOut
Specify whether the emphasis::scales:: of all the link::Classes/AlgaNode::s connected to the outputs of this one should be maintained.

METHOD:: from
Connect the specific input parameter of this link::Classes/AlgaNode:: to the output of another link::Classes/AlgaNode::, link::Classes/Number:: or link::Classes/Array::.
ARGUMENT:: sender
An link::Classes/AlgaNode::, link::Classes/Number:: or link::Classes/Array::.
ARGUMENT:: param
Which parameter to connect to.
ARGUMENT:: chans
An optional link::Classes/Array:: to specify the emphasis::channels mapping:: to take from the output of the emphasis::sender::. If not specified, all channels will be used.
ARGUMENT:: scale
An optional link::Classes/Number:: or link::Classes/Array::. If it is a number, the value works as a multiplier of the output of the emphasis::sender::. If it is an array, it can be specified in two different ways:
NUMBEREDLIST::
## 4 elements, specify a emphasis::linlin:: connection: code::[-1, 1, 0, 10]::.
## 2 elements, specify a emphasis::linlin:: connection but assume that the input range is -1 to 1: code::[0, 10]::.
::
Note that all the values can be specified as arrays, in which case they map for specific channels. For example, code::[-1, [1, 2], 0, [10, 20]]:: will scale the first channel to code::[-1, 1, 0, 10]::, and the second one to code::[-1, 2, 0, 20]::.
ARGUMENT:: time
Define a temporary connection time that the method takes to complete, applying the necessary interpolations.
ARGUMENT:: sched
Just like any other link::Classes/AlgaNode:: method, the current function can be scheduled at specific times in the future, according to the clock that the link::Classes/Alga:: instance booted on the server is using.


METHOD:: <<
Shortcut for emphasis::from::, where, due to syntax restrictions, only emphasis::sender:: and emphasis::param:: can be specified.
Connect the specific input parameter of this link::Classes/AlgaNode:: to the output of another link::Classes/AlgaNode::, link::Classes/Number:: or link::Classes/Array::.
ARGUMENT:: sender
An link::Classes/AlgaNode::, link::Classes/Number:: or link::Classes/Array::.
ARGUMENT:: param
Which parameter to connect to.

METHOD:: to
Same as emphasis::from::, where the emphasis::receiver:: argument is the link::Classes/AlgaNode:: that the connection is applied to.

METHOD:: >>
Shortcut for emphasis::to::, where, due to syntax restrictions, only emphasis::receiver:: and emphasis::param:: can be specified.

METHOD:: mixFrom
Same as emphasis::from::, but all active connections to the parameter are maintained. Essentially, this adds another connection to the specific parameter, adding the values of all the connections together.

METHOD:: <<+
Shortcut for emphasis::mixFrom::, where, due to syntax restrictions, only emphasis::sender:: and emphasis::param:: can be specified.

METHOD:: mixTo
Same as emphasis::mixFrom::, where the emphasis::receiver:: argument is the link::Classes/AlgaNode:: that the connection is applied to.

METHOD:: >>+
Shortcut for emphasis::mixTo::, where, due to syntax restrictions, only emphasis::receiver:: and emphasis::param:: can be specified.

METHOD:: mixSwap
Replace a connection in the mix of a specific parameter: emphasis::newSender:: replaces emphasis::oldSender::. All the other arguments work the same as the other connection methods.

METHOD:: disconnect
If emphasis::oldSender:: is specified, disconnect that specific entry in the mix of a specific parameter. Otherwise, reset the entire parameter to its default value.

METHOD:: reset
Same as emphasis::disconnect:: where no emphasis::oldSender:: is specified: reset the parameter to its default value, disconnecting all mix entries.

METHOD:: <|
Shortcut for emphasis::reset::.