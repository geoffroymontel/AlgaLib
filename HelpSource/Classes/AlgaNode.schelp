TITLE:: AlgaNode
summary:: Alga module representing an instance of a sonic process
categories:: Alga
related:: Classes/Alga, Classes/AlgaSynthDef

DESCRIPTION::
An link::Classes/AlgaNode:: is the fundamental element of link::Classes/Alga::. Conceptually, it is very similar to an individual in a modular synthesizer, which, however, can be dynamically created and replaced on the fly. link::Classes/AlgaNode::s can be patched together by addressing specific output to input (and vice-versa) connections.

There are 3 important features that make link::Classes/AlgaNode::s different from other forms of patching already present in emphasis::SuperCollider::.

NUMBEREDLIST::
## Connecting link::Classes/AlgaNode::s together will trigger a process of interpolation between the current state of the receiver and the future one where the new connection will take place. This feature applies to any operation: from creation, to connection and replacement of nodes.

## Whenever a new connection is made, link::Classes/Alga:: takes care of running any necessary conversions of rate and number of channels: link::Classes/Alga:: takes a emphasis::patch anything into anything:: approach.

## link::Classes/AlgaNode::s do not only specify connections via their parameters, as it is usual in emphasis::SuperCollider::, but also by emphasis::output names::. In fact, thanks to the link::Classes/AlgaSynthDef:: class it is possible to define specific emphasis::symbol to channel(s):: combinations to address a specific output - or outputs - of a node. An link::Classes/AlgaNode::, then, is not only described by its emphasis::inputs::, but, like in modular synthesizers, also by its emphasis::outputs::.
::

By going through the examples, hopefully all these notions will be clearer.

CLASSMETHODS::

METHOD:: new
Create a new link::Classes/AlgaNode::.
ARGUMENT:: obj
Mandatory argument. It accepts either a emphasis::UGen function:: or a symbol to lookup a defined link::Classes/AlgaSynthDef::
ARGUMENT:: args
Optional argument. Define default arguments for the parameters of the function or link::Classes/AlgaSynthDef::. Note that these will be applied in regards to emphasis::connectionTime::.
ARGUMENT:: connectionTime
Optional argument. Specify the interpolation time it takes whenever making a new connection to any parameter of this link::Classes/AlgaNode::.
ARGUMENT:: playTime
Optional argument. Specify the fading in / fading out time that it takes for this link::Classes/AlgaNode:: to play through speakers. These values are applied when calling the emphasis::play:: or emphasis::stop:: functions.
ARGUMENT:: outsMapping
Optional argument. It works just like link::Classes/AlgaSynthDef::'s emphasis::outsMapping:: argument, but for the case of using an emphasis::UGen function:: as the emphasis::obj:: argument. Specify new mappings by an array that maps symbols to specific output channels.
ARGUMENT:: server
Optional argument. Specify a link::Classes/Server:: to instantiated the link::Classes/AlgaNode:: on. This link::Classes/Server:: must have had link::Classes/Alga:: booted on it. It defaults to code::Server.default::.
ARGUMENT:: sched
Optional argument. Just like any other link::Classes/AlgaNode:: method, the current function can be scheduled at specific times in the future, according to the clock that the link::Classes/Alga:: instance booted on the server is using.

INSTANCEMETHODS::

METHOD:: replace
a

METHOD:: from
a

METHOD:: <<
a

METHOD:: to
a

METHOD:: >>
a

METHOD:: mixFrom
a

METHOD:: <<+
a

METHOD:: mixTo
a

METHOD:: >>+
a

METHOD:: mixSwap
a

METHOD:: disconnect
a

METHOD:: reset
a

METHOD:: <|
a
